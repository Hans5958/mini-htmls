let varsToCheck=[],varsChecked=0,timer=0,statusProgressBar="fetch";var parseToHTML=e=>(new DOMParser).parseFromString(e,"text/html");const getData=(e,t,r=(()=>{}),s=(()=>{}),a=(()=>{}))=>{"json"===t?$.getJSON(e).done(e=>r(e)).fail(e=>s(e)).always(()=>a()):"html"===t&&$.get(e).done(e=>r(parseToHTML(e))).fail(e=>s(parseToHTML(e))).always(()=>a())};class Counter{constructor(e,t,{url:r,doneCallback:s=(()=>{}),failCallback:a=(()=>{}),repliedCallback:n=(()=>{}),applyCallback:l=(()=>{}),resetCallback:o=(()=>{})}){this.name=e,this.elementID=t,this.url=r,this.doneCallback=s,this.failCallback=a,this.repliedCallback=n,this.values={},this.applyCallback=l,this.resetCallback=o,this.attach()}apply(){this.applyCallback(),document.querySelector(`#${this.elementID}.section .counter-main`).textContent=this.values.currentConfirmed,document.querySelector(`#${this.elementID}.section .progress-active`).style.width=`${(this.values.currentConfirmed-this.values.currentDeaths-this.values.currentRecovered)/this.values.currentConfirmed*100}%`,document.querySelector(`#${this.elementID}.section .progress-deaths`).style.width=`${this.values.currentDeaths/this.values.currentConfirmed*100}%`,document.querySelector(`#${this.elementID}.section .progress-recovered`).style.width=`${this.values.currentRecovered/this.values.currentConfirmed*100}%`,document.querySelector(`#${this.elementID}.section .counter-active`).textContent=this.values.currentConfirmed-this.values.currentDeaths-this.values.currentRecovered,document.querySelector(`#${this.elementID}.section .counter-deaths`).textContent=this.values.currentDeaths,document.querySelector(`#${this.elementID}.section .counter-recovered`).textContent=this.values.currentRecovered,document.querySelector(`#${this.elementID}.section .lastupdated`).textContent=`Last updated: ${dayjs(this.values.lastUpdated).fromNow()}`}reset(){this.resetCallback(),this.values={}}async fetch(){return new Promise(async e=>{if(Array.isArray(this.url))var t=this.url[~~(this.url.length*Math.random())];else t=this.url;Array.isArray(t)||(t=[t,"json"]),getData(t[0],t[1],async e=>{var r=this.doneCallback(e,t[0]);Object.keys(r).forEach(e=>{(this.values[e]===undefined||this.values[e]<r[e])&&(this.values[e]=r[e])})},this.failCallback,()=>{this.repliedCallback(),e()})})}attach(){varsToCheck=varsToCheck.filter(e=>e!==this.name).concat(this.name)}detach(){varsToCheck=varsToCheck.filter(e=>e!==this.name)}static applyAll(){varsToCheck.forEach(e=>{window[e].apply()})}static resetAll(){varsToCheck.forEach(e=>{window[e].reset()})}static async fetchAll(){return new Promise(async e=>{varsToCheck.forEach(async t=>{document.querySelector("#status .progress-bar").style.transition="width .25s ease",await window[t].fetch(),varsChecked++,document.querySelector("#status p").textContent=`Fetching data... (${varsChecked}/${varsToCheck.length})`,document.querySelector("#status .progress-bar").style.width=`${varsChecked/varsToCheck.length*100}%`,varsChecked===varsToCheck.length&&(varsChecked=0,document.querySelector("#status p").textContent="All data fetched!",setTimeout(()=>{document.querySelector("#status .progress-bar").style.transition="unset",statusProgressBar="timer"},1e3),e())})})}}var worldometers=new Counter("worldometers","worldometers",{url:[["https://www.worldometers.info/coronavirus/","html"]],doneCallback:e=>{var t={currentConfirmed:parseInt(e.querySelector(".content-inner > div:nth-child(7) > div:nth-child(2) > span").textContent.split(",").join("")),currentDeaths:parseInt(e.querySelector(".content-inner > div:nth-child(9) > div:nth-child(2) > span").textContent.split(",").join("")),currentRecovered:parseInt(e.querySelector(".content-inner > div:nth-child(10) > div:nth-child(2) > span").textContent.split(",").join("")),lastUpdated:new Date};return worldometers.values!=={}&&worldometers.values.currentConfirmed===t.currentConfirmed?worldometers.values:t},applyCallback:()=>{getData("https://corona.lmao.ninja/v2/all","json",e=>{worldometers.values.lastUpdated=new Date(e.updated),worldometers.applyCallback=(()=>{}),worldometers.apply()})}}),JohnsHopkins=new Counter("JohnsHopkins","johnshopkins",{url:"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/query?f=json&where=Confirmed%20%3E%200&outFields=%22Last_Update,Confirmed,Deaths,Recovered%22&returnGeometry=false",doneCallback:e=>(resultObj={currentConfirmed:0,currentDeaths:0,currentRecovered:0,lastUpdated:0},e.features.forEach(e=>{resultObj.currentConfirmed+=e.attributes.Confirmed,resultObj.currentDeaths+=e.attributes.Deaths,resultObj.currentRecovered+=e.attributes.Recovered,resultObj.lastUpdated<e.attributes.Last_Update&&(resultObj.lastUpdated=e.attributes.Last_Update)}),resultObj.lastUpdated=new Date(resultObj.lastUpdated),resultObj)}),Indonesia=new Counter("Indonesia","indonesia",{url:"https://services5.arcgis.com/VS6HdKS0VfIhv8Ct/arcgis/rest/services/Statistik_Perkembangan_COVID19_Indonesia/FeatureServer/0/query?f=json&where=(Jumlah_Kasus_Kumulatif%20%3C%3E%20null)&outFields=%22Jumlah_Kasus_Kumulatif,Jumlah_Pasien_Meninggal,Jumlah_Pasien_Sembuh,Tanggal%22&returnGeometry=false&orderByFields=Jumlah_Kasus_Kumulatif",doneCallback:e=>Indonesia.values!=={}&&Indonesia.values.currentConfirmed===e.features[e.features.length-1].attributes.Jumlah_Kasus_Kumulatif?Indonesia.values:{currentConfirmed:e.features[e.features.length-1].attributes.Jumlah_Kasus_Kumulatif,currentDeaths:e.features[e.features.length-1].attributes.Jumlah_Pasien_Meninggal,currentRecovered:e.features[e.features.length-1].attributes.Jumlah_Pasien_Sembuh,lastUpdated:new Date},applyCallback:()=>{getData("https://services5.arcgis.com/VS6HdKS0VfIhv8Ct/arcgis/rest/services/Statistik_Perkembangan_COVID19_Indonesia/FeatureServer/0?f=json","json",e=>{Indonesia.values.lastUpdated=new Date(e.editingInfo.lastEditDate),Indonesia.applyCallback=(()=>{}),Indonesia.apply()})}}),IHME=new Counter("IHME","ihme",{url:"https://healthmap.org/covid-19/latestCounts.json",doneCallback:e=>IHME.values!=={}&&IHME.values.currentConfirmed===parseInt(e[0].caseCount.split(",").join(""))?IHME.values:{currentConfirmed:parseInt(e[0].caseCount.split(",").join("")),currentDeaths:0,currentRecovered:0,lastUpdated:new Date},applyCallback:()=>{getData("https://api.github.com/repos/beoutbreakprepared/nCoV2019/commits","json",e=>{IHME.values.lastUpdated=new Date(e[0].commit.committer.date),IHME.applyCallback=(()=>{}),IHME.apply()})}});dayjs.extend(dayjs_plugin_relativeTime),dayjs.extend(dayjs_plugin_customParseFormat),$(document).ready(async()=>{document.querySelector("#status p").textContent="Testing for cross-origin request ability... (If this text won't disappear, please refresh.)",getData("https://en.wikipedia.org/w/api.php","html",()=>{},()=>{IHME.detach(),document.querySelector("#ihme").style.display="none",worldometers.url="https://corona.lmao.ninja/v2/all",worldometers.doneCallback=(e=>({currentConfirmed:e.cases,currentDeaths:e.deaths,currentRecovered:e.recovered,lastUpdated:new Date(e.updated)}))},()=>{Counter.resetAll(),execute(),setInterval(()=>{timer++,"timer"===statusProgressBar&&(document.querySelector("#status p").textContent=`Waiting... (${((1e3-timer)/100).toFixed(2)}s)`,document.querySelector("#status .progress-bar").style.width=`${timer/1e3*100}%`),1e3===timer&&(statusProgressBar="fetch",document.querySelector("#status p").textContent=`Fetching data... (0/${varsToCheck.length})`,document.querySelector("#status .progress-bar").style.width="0",timer=0,execute())},10),odometerStyle=document.querySelector("#odometer-style").textContent,document.querySelector("#odometer-style").textContent="",setTimeout(()=>{document.querySelector("#odometer-style").textContent=odometerStyle},1e4)})});const execute=async()=>{await Counter.fetchAll(),Counter.applyAll()};