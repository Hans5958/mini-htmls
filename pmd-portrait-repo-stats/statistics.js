let totalSteps,data={pokemons:[],modifiedDates:[],modifiedDatesTidy:{},progress:{pokemon:{total:0,0:0,1:0,2:0},form:{total:0,0:0,1:0,2:0},portrait:{total:0,0:0,1:0,2:0}}},step=0;const getData=(e,t=(()=>{}),o=(()=>{}),a=(()=>{}))=>{$.getJSON(e).done(e=>t(e)).fail(e=>o(e)).always(()=>a())};document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#toc-content"),t=[...document.querySelectorAll("h2:not(.toc-ignore), h3:not(.toc-ignore), h4:not(.toc-ignore), h5:not(.toc-ignore), h6:not(.toc-ignore)")];t.forEach((o,a)=>{let r="toc-"+(a+1);o.hasAttribute("id")?r=o.getAttribute("id"):o.setAttribute("id",r);const s=document.createElement("a");s.setAttribute("href",`#${r}`),s.textContent=o.textContent.replace(/\s*Toggle\s*$/,"");const d=document.createElement("div");d.setAttribute("class",`toc-${o.tagName.toLowerCase()}`),d.appendChild(s),e.children[a>=Math.round(t.length/2)?1:0].appendChild(d)})});const updateProgressBar=(e,t=!0)=>{t&&step++,document.querySelector("#intro .status").textContent=`${e}`,document.querySelector("#intro .progress-bar").style.width=`${step/totalSteps*100}%`},generateSquareElement=()=>{let e=document.createElement("div");return e.classList.add("viz-square"),e.cloneNode()},processData=()=>{let e;Object.values(data.pokemons).forEach(e=>{Object.values(e.forms).forEach(e=>{data.modifiedDates.push(e.modified)})}),data.modifiedDates=data.modifiedDates.sort().sort(()=>-1),data.modifiedDatesTidy={};let t=new Date(data.modifiedDates[0]).getTime(),o=new Date(data.modifiedDates[data.modifiedDates.length-1]).getTime()-t;data.modifiedDates.forEach(e=>{data.modifiedDatesTidy[e]={unix:new Date(e).getTime(),heat:(new Date(e).getTime()-t)/o}}),document.querySelectorAll(".viz-scale[data-scale-type=heatmap] .viz-scale-info").forEach(e=>{e.querySelector(".viz-scale-left").textContent=data.modifiedDates[0],e.querySelector(".viz-scale-right").textContent=data.modifiedDates[data.modifiedDates.length-1]}),Object.entries(data.pokemons).forEach(([t,o])=>{const a=t;let r,s={name:`${o.name} (${o.id})`,status:"",lastModified:""};0===o.complete?s.status="Missing":1===o.complete?(r="viz-square-incomplete",s.status="Incomplete (Exists)"):2===o.complete&&(r="viz-square-complete",s.status="Complete (Fully Featured)"),data.progress.pokemon[o.complete]++,data.progress.pokemon.total++;let d={unix:0,heat:0};Object.entries(o.forms).forEach(([o,s])=>{const n=a+";"+o;let i=data.modifiedDatesTidy[s.modified];d.unix<i.unix&&(d=i,data.pokemons[t].lastModified=s.modified),data.progress.form[s.complete]++,data.progress.form.total++;let l=s.portraits;s.preversed&&l.concat[s.preversed],l.forEach((t,o)=>{const a=n+";"+o;data.progress.portrait[s.complete*t]++,data.progress.portrait.total++,e=generateSquareElement(),t&&e.classList.add(r),e.dataset.tooltipId=a,document.querySelector("#viz-3 .viz-grid").appendChild(e.cloneNode())}),(e=generateSquareElement()).classList.add(r),e.dataset.tooltipId=n,document.querySelector("#viz-2 .viz-grid").appendChild(e.cloneNode()),(e=generateSquareElement()).style.backgroundColor=`rgb(${255*i.heat}, 0, 0)`,e.dataset.tooltipId=n,document.querySelector("#viz-5 .viz-grid").appendChild(e.cloneNode())}),(e=generateSquareElement()).classList.add(r),e.dataset.tooltipId=a,document.querySelector("#viz-1 .viz-grid").appendChild(e.cloneNode()),(e=generateSquareElement()).style.backgroundColor=`rgb(${255*d.heat}, 0, 0)`,e.dataset.tooltipId=a,document.querySelector("#viz-4 .viz-grid").appendChild(e.cloneNode())}),Object.keys(data.progress).forEach((e,t)=>{t++,progress=data.progress[e],console.log(`#progress-${t}-1 .count-main`);for(let e=0;e<3;e++)document.querySelector(`#progress-${t}-${e+1} .count-main`).textContent=progress[2-e],document.querySelector(`#progress-${t}-${e+1} .count-details`).textContent=`${Math.round(progress[2-e]/progress.total*100)}% (${progress[2-e]}/${progress.total})`,document.querySelectorAll(`#progress-${t}-5 .progress-bar`)[e]["aria-valuenow"]=progress[2-e],document.querySelectorAll(`#progress-${t}-5 .progress-bar`)[e].style.width=`${progress[2-e]/progress.total*100}%`,document.querySelectorAll(`#progress-${t}-5 .progress-bar`)[e].textContent=`${Math.round(progress[2-e]/progress.total*100)}% (${progress[2-e]}/${progress.total})`,document.querySelectorAll(`#progress-${t}-5 .progress-bar`)[e]["aria-valuemax"]=progress.total;document.querySelector(`#progress-${t}-4 .count`).textContent=progress.total})};(async()=>{await(()=>new Promise(e=>{updateProgressBar("Fetching data...",!1),step=0,totalSteps=2;const t=()=>{updateProgressBar(`Fetching data... (${step+1}/${totalSteps+1})`),step===totalSteps&&(document.querySelector("#intro .status").textContent=`All data fetched! Fetched on ${(new Date).toString()}`,document.querySelector("#main-stats").removeAttribute("hidden"),document.querySelector("#toc").removeAttribute("hidden"),"complete"===document.readyState||"interactive"===document.readyState?processData():document.addEventListener("DOMContentLoaded",()=>processData())),e()};getData("https://raw.githubusercontent.com/PMDCollab/SpriteViewer/main/resources/pokemons.json",e=>{data.pokemons=e,t()}),getData(jsonData.portraitDict,e=>{data.portraitDict=e,t()})}))()})();