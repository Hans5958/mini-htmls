function logEvent(t="",e=!1,s=!0){log.push(t),!0===e&&($("#username")[0].disabled=!1,$("#mode")[0].disabled=!1),!0===s&&($("pre#log")[0].innerHTML=log.join("\n"),$("pre#log")[0].scrollTop=$("pre#log")[0].scrollHeight)}function reportEvent(t=""){report.push(t)}function sort(t,e,s){return logEvent(e+" List sorted."),t.sort(s)}function regexResult(t,e){let s=new RegExp(e,"gm"),o=[];for(var i in matchedData=t.match(s),matchedData)2===matchedData[i].match(e).length?o.push(matchedData[i].match(e)[1]):o.push(matchedData[i].match(e).slice(1));return o}function execEnd(){reportEvent("Hans5958's Scratch Stats (build date "+buildDate+")"),reportEvent("Report of "+profileData.username),reportEvent(),reportEvent("Data obtained on "+dayjs().tz(dayjs.tz.guess()).format("dddd, D MMMM YYYY, H:mm:ss z")+"."),reportEvent("Vanity URL: "+window.location),reportEvent(),reportEvent("Username: "+profileData.username),reportEvent("ID: "+profileData.id),reportEvent("Join Date: "+dayjs.tz(dateJoined,"GMT").tz(dayjs.tz.guess()).format("dddd, D MMMM YYYY, H:mm:ss z")),reportEvent("Country: "+profileData.profile.country),reportEvent("Projects Shared: "+projList.length),"ext"===mode&&(reportEvent("Projects Favorited: "+list.projectsFavorited.length),reportEvent("Followed User: "+list.usersFollowing.length),reportEvent("Followers: "+list.usersFollowers.length),reportEvent("Curated Studios: "+list.studiosCurated.length),reportEvent("Followed Studios: "+list.studiosFollowed.length)),reportEvent("Current Message Count: "+msgCount),reportEvent(),reportEvent("User Activity (each limited to 20)"),reportEvent("Projects Loved: "+activity.love),reportEvent("Projects Favorited: "+activity.favorite),reportEvent("Projects Shared: "+activity.share),reportEvent("Users Followed: "+activity.userfollow),reportEvent("Projects Added to Studio: "+activity.studioadd),reportEvent("Studios Curated: "+activity.studiocurator),reportEvent("Studios Managed: "+activity.studiomanager),reportEvent("Total: "+activity.total),reportEvent(),stats.forEach(function(t,e){reportEvent("Total "+statsC[e]+": "+totalStats[t])}),reportEvent(),stats.forEach(function(t,e){reportEvent("Average "+statsC[e]+": "+avgStats[t])}),reportEvent(),stats.forEach(function(t,e){reportEvent("Most "+statsPC[e]+" Project: "+topProjects[t].title+" ("+topProjects[t].stats[t]+")")}),reportEvent(),reportEvent("Oldest Project: "+topProjects.oldest.title+" ("+topProjects.oldest.id+")"),reportEvent("Newest Project: "+topProjects.newest.title+" ("+topProjects.newest.id+")"),reportEvent(),reportEvent("Lists Of Stats:"),reportEvent(),reportEvent(`Projects: (${stats.join(" / ")})`),sortLists.id.forEach(function(t,e){reportEvent(++e+". ["+t.id+"] "+t.title+" ("+stats.map(e=>t.stats[e]).join(" / ")+")")}),stats.forEach(function(t,e){reportEvent(),reportEvent("Most "+statsPC[e]+" Project:"),sortLists[t].forEach(function(e,s){reportEvent(++s+". ["+e.stats[t]+"] "+e.title)})}),"ext"===mode&&lists.forEach(function(t,e){reportEvent(),reportEvent(listsName[e]+":"),list[t].forEach(function(t,e){e++,reportEvent("object"==typeof t?e+". ["+t[0]+"] "+t[1]:e+". "+t)})}),logEvent(),logEvent("================================"),logEvent(),report.forEach(function(t){logEvent(t,!1,!1)}),logEvent(),logEvent("================================"),logEvent(),logEvent("Report printed!"),logEvent("Operation completed in "+timer.stop()/1e3+" seconds.",!0)}async function go(){if(mode=$("#mode")[0].value,!1===$("#username")[0].disabled){async function t(){"main"===mode||"alt"===mode||"ext"===mode?await execProfileMain():"sdb"===mode&&await execProfileSDB(),await execProjectStats()}async function e(){"main"===mode?await execProjectMain():"alt"===mode||"ext"===mode?await execProjectAlt():"sdb"===mode&&await execProjectSDB(),await execProjectStats()}async function s(){"ext"===mode&&await Promise.all([execUsersFollowing(),execUsersFollowers(),execStudiosCurated(),execStudiosFollowed(),execProjectsFavorited()])}await init(),"sstats"!==mode?(await t(),await Promise.all([execActivity(),execMessages(),e(),s()])):(await execSStats(),await execMessages()),execEnd()}}dayjs.extend(dayjs_plugin_utc),dayjs.extend(dayjs_plugin_timezone),dayjs.extend(dayjs_plugin_advancedFormat);const buildDate="31/12/2021",lists=["projectsFavorited","usersFollowing","usersFollowers","studiosFollowed","studiosCurated"];let test1,test2,test3,test4,test5;listsName=["Project Favorites","Followed Users","Followers","Followed Studios","Curated Studios"];let username,cors,profileData,projList,topProjects,dateJoined,activity,msgCount,fullSpeed,list,mode,stats,statsC,statsP,statsPC,log=[],report=[];const capitalizeFirstLetter=t=>t[0].toUpperCase()+t.slice(1),timer={time:0,start(){return this.time=Date.now()},stop(){return this.time=Date.now()-this.time}},init=()=>new Promise(async t=>{logEvent(),logEvent("Scratch Stats starting..."),logEvent("Preparing..."),$("#username")[0].disabled=!0,$("#mode")[0].disabled=!0,timer.start(),stats=["views","loves","favorites"],statsP=["viewed","loved","favorited"],"alt"===mode||"ext"===mode?(stats.push("remixes"),statsP.push("remixed")):"sdb"===mode&&(stats.push("comments"),statsP.push("commented")),statsC=stats.map(t=>capitalizeFirstLetter(t)),statsPC=statsP.map(t=>capitalizeFirstLetter(t)),report=[],projList=[],topProjects={views:{},loves:{},favorites:{},comments:{},remixes:{},oldest:{},newest:{}},sortLists={views:{},loves:{},favorites:{},comments:{},remixes:{},id:{}},totalStats={views:0,loves:0,favorites:0,comments:0,remixes:0},avgStats={views:0,loves:0,favorites:0,comments:0,remixes:0},activity={favorite:0,love:0,studioadd:0,studiofollow:0,userfollow:0,studiocurator:0,studiomanager:0,share:0,total:0},list={projectsFavorited:[],usersFollowing:[],usersFollowers:[],studiosFollowed:[],studiosCurated:[]};const e=()=>new Promise(t=>{$.getJSON("https://api.scratch.mit.edu/",function(){t("")}).fail(function(){$.getJSON("https://cf-cors.hans5958.workers.dev/?url=https://api.scratch.mit.edu",function(){t("https://cf-cors.hans5958.workers.dev/?url=")}).fail(function(){t(!1)})})});logEvent("Selecting CORS proxy..."),"string"==typeof corsOverride?(logEvent("CORS proxy selected! "+(cors=corsOverride)),t()):!1!==(cors=await e())?(logEvent("CORS proxy selected! "+cors),""===cors?"sstats"===mode?(logEvent("Cross-origin request allowed."),logEvent("For some reason, ScratchStats API forbids cross-origin request."),logEvent("To continue, disallow cross-origin request and try again.",!0)):(fullSpeed=!0,logEvent("Allowed all cross-origin request. Full speed!"),t()):"ext"===mode?(logEvent("Cross-origin request not allowed."),logEvent("To continue, allow cross-origin request (by downloading CORS Everywhere or any other add-on/extension) and try again.",!0)):t()):logEvent("CORS proxy failed! Aborting operation.",!0)}),execProfileMain=()=>new Promise(t=>{logEvent("Username: "+(username=$("#username")[0].value)),logEvent("Finding user..."),$.getJSON(cors+"https://api.scratch.mit.edu/users/"+username).done(function(e){logEvent("User found!"),profileData=e,dateJoined=new Date(e.history.joined),t()}).fail(function(){logEvent("User not found! Aborting operation.",!0)})}),execProfileSDB=()=>new Promise(t=>{logEvent("Username: "+(username=$("#username")[0].value)),logEvent("Finding user..."),$.getJSON("https://scratchdb.lefty.one/v2/user/info/"+username).done(function(e){"notfound"===e.error?logEvent("User not found! Aborting operation.",!0):(logEvent("User found!"),profileData={id:e.id,username:e.username,scratchteam:e.status,history:{joined:e.joined},profile:{id:e.id,images:{"90x90":`https://cdn2.scratch.mit.edu/get_image/user/${e.id}_90x90.png?v=`,"60x60":`https://cdn2.scratch.mit.edu/get_image/user/${e.id}_60x60.png?v=`,"55x55":`https://cdn2.scratch.mit.edu/get_image/user/${e.id}_55x55.png?v=`,"50x50":`https://cdn2.scratch.mit.edu/get_image/user/${e.id}_50x50.png?v=`,"32x32":`https://cdn2.scratch.mit.edu/get_image/user/${e.id}_32x32.png?v=`},status:e.status,bio:e.bio,country:e.country}},dateJoined=new Date(e.joined),t())}).fail(function(){logEvent("User not found! Aborting operation.",!0)})}),execProjectMain=()=>new Promise(t=>{function e(s){pgPlus=s+1,logEvent("[P1] Analyzing page "+pgPlus+"..."),$.getJSON(cors+"https://api.scratch.mit.edu/users/"+username+"/projects/?limit=40&offset="+40*s,function(s){0!=s.length?(s.forEach(function(t){logEvent("[P1] "+t.id+" "+t.title,!1,!1),projList.push({id:t.id,title:t.title,stats:t.stats})}),logEvent("[P1] Analyzed page "+pgPlus+"."),logEvent("[P1] Total projects now: "+projList.length),e(pgPlus)):(logEvent("[P1] All pages analyzed and all project's statistics obtained!"),t())})}logEvent("[P1] Obtaining projects list..."),e(0)}),execProjectAlt=()=>new Promise(async t=>{let e,s,o,i=0,n=[],r=0;const a=()=>new Promise(t=>{function o(s){logEvent("[P1] Analyzed page "+s+" of "+e+"."),logEvent("[P1] Total projects now: "+n.length),++i===e&&t()}logEvent("[P1] Obtaining projects list..."),$.get(cors+"https://scratch.mit.edu/users/"+username+"/projects/").done(function(t){if(s=t.match(/project\/\d+/gm),n=n.concat(s),e=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[P1] Projects obtained!"),logEvent("[P1] Analyzing "+e+" page(s)..."),o(1),e>1)for(var i=2;i<e+1;i++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/projects/?page="+i,function(t){s=t.match(/project\/\d+/gm),n=n.concat(s),o(i)})})}),l=()=>new Promise(()=>{logEvent("[P1] All pages analyzed!"),logEvent("[P1] Total projects: "+n.length),logEvent("[P1] Obtaining "+(o=n.length)+" project's statistics...");for(var e=0;e<o;e++)$.getJSON(cors+"https://api.scratch.mit.edu/projects/"+n[e].match(/\d+/g)).done(function(e){logEvent("[P1] Obtained project's statistics "+ ++r+" of "+o+"."),logEvent("[P1] "+e.id+" "+e.title),projList.push({id:e.id,title:e.title,stats:e.stats}),o==r&&(logEvent("[P1] All project's statistics obtained!"),t())}).fail(function(){logEvent("[P1] Failed to obtain project's statistics "+ ++r+" of "+o+"."),logEvent("[P1] "+data.id),o==r&&(logEvent("[P1] All project's statistics obtained!"),t())})});await a(),await l()}),execProjectSDB=()=>new Promise(t=>{logEvent("[P1] Obtaining all projects statistics..."),$.getJSON("https://scratchdb.lefty.one/v2/project/info/user/"+username,function(e){e.projects.forEach(function(t){logEvent("[P1] "+t.info.scratch_id+" "+t.info.title,!1,!1),projList.push({id:t.info.scratch_id,title:t.info.title,stats:{views:t.views,loves:t.loves,favorites:t.favorites,comments:t.comments,remixes:0}})}),logEvent("[P1] All project's statistics obtained!"),t()})}),execProjectStats=()=>new Promise(t=>{logEvent("[P1] Analyzing all projects..."),stats.forEach(function(t){sortLists[t]=Array.from(projList),sortLists[t].sort(function(e,s){return s.stats[t]-e.stats[t]}),topProjects[t]=sortLists[t][0],projList.forEach(function(e){totalStats[t]+=e.stats[t]}),avgStats[t]=Math.round(totalStats[t]/projList.length)}),sortLists.id=Array.from(projList),sortLists.id.sort(function(t,e){return t.stats.id+e.stats.id}),topProjects.id=sortLists.id[0],projList.forEach(function(t){totalStats.id+=t.stats.id}),avgStats.id=Math.round(totalStats.id/projList.length),topProjects.oldest=sortLists.id[0],topProjects.newest=sortLists.id[projList.length-1],logEvent("[P1] All projects analyzed!"),t()}),execActivity=()=>new Promise(t=>{logEvent("[AC] Analyzing user activity..."),$.get(cors+"https://scratch.mit.edu/messages/ajax/user-activity/?user="+username+"&max=99999",function(e){function s(t){return null===e.match(t)?0:e.match(t).length}activity.favorite=s(/favorites/g),activity.love=s(/loves/g),activity.studioadd=s(/added/g),activity.studiofollow=s(/following the/g),activity.userfollow=s(/following (?!the)/g),activity.studiocurator=s(/became/g),activity.studiomanager=s(/promoted/g),activity.share=s(/shared/g),activity.total=s(/\/li/g),logEvent("[AC] User activity analyzed!"),t()})}),execMessages=()=>new Promise(t=>{logEvent("[MS] Obtaining message count..."),$.getJSON(cors+"https://api.scratch.mit.edu/users/"+username+"/messages/count",function(e){msgCount=e.count,logEvent("[MS] Message count obtained!"),t()})}),execUsersFollowing=()=>new Promise(t=>{function e(){logEvent("[U1] Analyzed page "+ ++o+" of "+s+"."),logEvent("[U1] Total following users now: "+list.usersFollowing.length),o===s&&(logEvent("[U1] All pages analyzed!"),sort(list.usersFollowing,"[U1]"),t())}logEvent("[U1] Obtaining following list...");let s,o=0;$.get(cors+"https://scratch.mit.edu/users/"+username+"/following/").done(function(t){if(list.usersFollowing=list.usersFollowing.concat(regexResult(t,/item">\s*<a href="\/users\/(.+)\//)),s=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[U1] Following users obtained!"),logEvent("[U1] Analyzing "+s+" page(s)..."),e(1),s>1)for(var o=2;o<s+1;o++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/following/?page="+o,function(t){list.usersFollowing=list.usersFollowing.concat(regexResult(t,/item">\s*<a href="\/users\/(.+)\//)),e()})})}),execUsersFollowers=()=>new Promise(t=>{function e(){logEvent("[U2] Analyzed page "+ ++o+" of "+s+"."),logEvent("[U2] Total followers now: "+list.usersFollowers.length),o===s&&(logEvent("[U2] All pages analyzed!"),sort(list.usersFollowers,"[U2]"),t())}logEvent("[U2] Obtaining followers list...");let s,o=0;$.get(cors+"https://scratch.mit.edu/users/"+username+"/followers/").done(function(t){if(list.usersFollowers=list.usersFollowers.concat(regexResult(t,/item">\s*<a href="\/users\/(.+)\//)),s=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[U2] Followers obtained!"),logEvent("[U2] Analyzing "+s+" page(s)..."),e(1),s>1)for(var o=2;o<s+1;o++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/followers/?page="+o,function(t){list.usersFollowers=list.usersFollowers.concat(regexResult(t,/item">\s*<a href="\/users\/(.+)\//)),e()})})}),execStudiosCurated=()=>new Promise(t=>{function e(){logEvent("[S1] Analyzed page "+ ++o+" of "+s+"."),logEvent("[S1] Total studios curated now: "+list.studiosCurated.length),o===s&&(logEvent("[S1] All pages analyzed!"),sort(list.studiosCurated,"[S1]",function(t,e){return t[0]-e[0]}),t())}logEvent("[S1] Obtaining curated studios list...");let s,o=0;$.get(cors+"https://scratch.mit.edu/users/"+username+"/studios/").done(function(t){if(list.studiosCurated=list.studiosCurated.concat(regexResult(t,/\<a href="\/studios\/(.+)\/">(.+)/)),s=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[S1] Curated studios obtained!"),logEvent("[S1] Analyzing "+s+" page(s)..."),e(1),s>1)for(var o=2;o<s+1;o++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/studios/?page="+o,function(t){list.studiosCurated=list.studiosCurated.concat(regexResult(t,/\<a href="\/studios\/(.+)\/">(.+)/)),e()})})}),execStudiosFollowed=()=>new Promise(t=>{function e(){logEvent("[S2] Analyzed page "+ ++o+" of "+s+"."),logEvent("[S2] Total studios followed now: "+list.studiosFollowed.length),o===s&&(logEvent("[S2] All pages analyzed!"),sort(list.studiosFollowed,"[S2]",function(t,e){return t[0]-e[0]}),t())}logEvent("[S2] Obtaining followed studios list...");let s,o=0;$.get(cors+"https://scratch.mit.edu/users/"+username+"/studios_following/").done(function(t){if(list.studiosFollowed=list.studiosFollowed.concat(regexResult(t,/\<a href="\/studios\/(.+)\/">(.+)/)),s=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[S2] Followed studios obtained!"),logEvent("[S2] Analyzing "+s+" page(s)..."),e(1),s>1)for(var o=2;o<s+1;o++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/studios_following/?page="+o,function(t){list.studiosFollowed=list.studiosFollowed.concat(regexResult(t,/\<a href="\/studios\/(.+)\/">(.+)/)),e()})})}),execProjectsFavorited=()=>new Promise(t=>{function e(){logEvent("[P2] Analyzed page "+ ++o+" of "+s+"."),logEvent("[P2] Total projects favorited now: "+list.projectsFavorited.length),o===s&&(logEvent("[P2] All pages analyzed!"),sort(list.projectsFavorited,"[P2]",function(t,e){t[0],e[0]}),t())}logEvent("[P2] Obtaining favorited projects list...");let s,o=0;$.get(cors+"https://scratch.mit.edu/users/"+username+"/favorites/").done(function(t){if(list.projectsFavorited=list.projectsFavorited.concat(regexResult(t,/\<a href="\/projects\/(.+)\/">(.+)/)),s=null===t.match(/<span class="page-current/gm)?1:t.match(/<span class="page-current/gm).length,logEvent("[P2] Favorited users obtained!"),logEvent("[P2] Analyzing "+s+" page(s)..."),e(1),s>1)for(var o=2;o<s+1;o++)$.get(cors+"https://scratch.mit.edu/users/"+username+"/favorites/?page="+o,function(t){list.projectsFavorited=list.projectsFavorited.concat(regexResult(t,/\<a href="\/projects\/(.+)\/">(.+)/)),e()})})}),execSStats=()=>new Promise(t=>{logEvent("Username: "+(username=$("#username")[0].value)),logEvent("Finding user..."),$.getJSON(cors+"https://scratchstats.com/api/userstats?username="+username).done(function(e){e.error?logEvent("User not found! Aborting operation.",!0):(logEvent("User found!"),profileData=e.userData,dateJoined=new Date(e.userData.history.joined),e.projects.forEach(function(t){logEvent("[SS] "+t.id+" "+t.title,!1,!1),projList.push({id:t.id,title:t.title,stats:t.stats})}),logEvent("[SS] All project's statistics obtained!"),execProjectStats(),activity.favorite=e.activity.favorites,activity.love=e.activity.loves,activity.studioadd=0,activity.studiofollow=e.activity.studiosFollowed,activity.userfollow=e.activity.usersFollowed,activity.studiocurator=e.activity.studiosCurated,activity.studiomanager=0,activity.share=e.activity.projectsShared,activity.total=Object.values(e.activity).reduce((t,e)=>t+e),logEvent("[SS] User activity analyzed!"),t())}).fail(function(){logEvent("User not found! Aborting operation.",!0)})});$(function(){$("input")[0].value=window.location.hash?window.location.hash.slice(1):"Hans5958",window.location.hash=$("input")[0].value,go(),$("#username").change(function(){go(),window.location.hash=$("input")[0].value,$("input")[0].value=window.location.hash.slice(1)}),window.onhashchange=function(){go(),$("input")[0].value=window.location.hash.slice(1),window.location.hash=$("input")[0].value},$("#mode").change(function(){go()})});