function logInfo(...e){console.info(`[${cacheName}]`,...e)}const cacheName="zrp-encryption-machine@220722123402",cacheResource="https://hans5958.github.io/mini-htmls/assets/js/base.js\nhttps://hans5958.github.io/mini-htmls/assets/js/pwa.js?t=220722123402\nhttps://hans5958.github.io/mini-htmls/assets/css/base.css\nhttps://hans5958.github.io/mini-htmls/assets/img/placeholder-144.png\nhttps://cdn.jsdelivr.net/combine/npm/jquery@3.5.1/dist/jquery.min.js,npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js,npm/pace-js@1.2.4,npm/@iconify/iconify@1.0.7\nhttps://cdn.jsdelivr.net/combine/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css,npm/pace-js@1.2.4/themes/blue/pace-theme-flash.min.css\nhttps://hans5958.github.io/mini-htmls/zrp-encryption-machine/\nhttps://hans5958.github.io/mini-htmls/zrp-encryption-machine/index.html\nhttps://hans5958.github.io/mini-htmls/zrp-encryption-machine/script.js\nhttps://hans5958.github.io/mini-htmls/zrp-encryption-machine/pwa.webmanifest".trim().split("\n");self.addEventListener("install",e=>{logInfo("Service worker installed."),self.skipWaiting(),e.waitUntil(caches.open(cacheName).then(e=>e.addAll(cacheResource))),logInfo("Resources cached.")}),self.addEventListener("activate",e=>{logInfo("Service worker activated."),e.waitUntil(clients.claim())}),self.addEventListener("statechange",()=>{"installed"==newSW.state&&logInfo("Service worker updated.")}),self.addEventListener("fetch",e=>{e.respondWith((async()=>{const t=await fetch(e.request)["catch"](()=>undefined);if(t)return await caches.open(cacheName).then(s=>s.put(e.request,t.clone())),t;const s=await caches.match(e.request);return s||void 0})())});