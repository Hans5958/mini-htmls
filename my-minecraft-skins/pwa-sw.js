function logInfo(...s){console.info(`[${cacheName}]`,...s)}const cacheName="my-minecraft-skins@220722123402",cacheResource="https://hans5958.github.io/mini-htmls/assets/js/base.js\nhttps://hans5958.github.io/mini-htmls/assets/js/pwa.js?t=220722123402\nhttps://hans5958.github.io/mini-htmls/assets/css/base.css\nhttps://hans5958.github.io/mini-htmls/assets/img/placeholder-144.png\nhttps://cdn.jsdelivr.net/combine/npm/jquery@3.5.1/dist/jquery.min.js,npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js,npm/pace-js@1.2.4,npm/@iconify/iconify@1.0.7\nhttps://cdn.jsdelivr.net/combine/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css,npm/pace-js@1.2.4/themes/blue/pace-theme-flash.min.css\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/index.html\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/computer-guy.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/f3455-abandonbot.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/gameboy.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/p-rill.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/prototypes.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/redstone-engineer.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/redstone.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/redstoner.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/skins/speedycube.png\nhttps://hans5958.github.io/mini-htmls/my-minecraft-skins/pwa.webmanifest".trim().split("\n");self.addEventListener("install",s=>{logInfo("Service worker installed."),self.skipWaiting(),s.waitUntil(caches.open(cacheName).then(s=>s.addAll(cacheResource))),logInfo("Resources cached.")}),self.addEventListener("activate",s=>{logInfo("Service worker activated."),s.waitUntil(clients.claim())}),self.addEventListener("statechange",()=>{"installed"==newSW.state&&logInfo("Service worker updated.")}),self.addEventListener("fetch",s=>{s.respondWith((async()=>{const n=await fetch(s.request)["catch"](()=>undefined);if(n)return await caches.open(cacheName).then(t=>t.put(s.request,n.clone())),n;const t=await caches.match(s.request);return t||void 0})())});